import org.sireum.logika._

def sumOdds(n: Z): Z = {
    //want to return 1 + 3 + ... + (2n -1)

    //we know from mathematical induction that this should
    //equal n^2

    //use a loop

    var i: Z = 0
    var sum: Z = 0

    while (i != n) {
        var nextOdd: Z = 2*i - 1
        sum = sum + nextOdd
        i = i + 1
    }

    return sum
}

////////////// Test code //////////////

val pos: Z = 4

//call sumOdds to get the sum of the 4th odd number
//what do we want to assert that it is?